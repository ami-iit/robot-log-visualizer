version: 1
script:
  # Remove any previous build
  - rm -rf AppDir  | true
  # Make usr and icons dirs
  - mkdir -p AppDir/usr/src
  # Copy the python application code into the AppDir
  - cp robot_log_visualizer  AppDir/usr/src -r
  - mv AppDir/usr/src/robot_log_visualizer/__main__.py AppDir/usr/src/robot-log-visualizer.py

  # Force Yaru
  - sed -i '1s/^/QtGui.QIcon.setThemeName("Yaru")\n/' AppDir/usr/src/robot-log-visualizer.py
  - sed -i '1s/^/from PyQt5 import QtGui\n/' AppDir/usr/src/robot-log-visualizer.py

  # Install application dependencies
  - mkdir -p AppDir/usr/share/icons/hicolor/1024x1024/apps/
  - cp robot_log_visualizer/ui/misc/icon.png AppDir/usr/share/icons/hicolor/1024x1024/apps/robot-log-visualizer-icon.png
  - python3 -m pip install --ignore-installed --prefix=/usr --root=AppDir icub-models pyngrok pyqtconsole idyntree meshcat matplotlib h5py


AppDir:
  path: ./AppDir

  app_info:
    id: com.robot-log-visualizer.ami
    name: robot-log-visualizer
    version: 0.1.3
    icon: robot-log-visualizer-icon
    # Set the python executable as entry point
    exec: usr/bin/python3
    # Set the application main script path as argument. Use '$@' to forward CLI parameters
    exec_args: "$APPDIR/usr/src/robot-log-visualizer.py"

  apt:
    arch: amd64
    sources:
      - sourceline: 'deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x3b4fe6acc0b21f32'

    include:
      - python3
      - python3-pkg-resources
      - coinor-libipopt-dev
      - python3-pyqt5
      - python3-pyqt5.qtwebengine
      - python3-pyqt5.qtmultimedia
      - python3-qtpy
      - libassimp-dev
      - libqt5multimedia5-plugins
      - yaru-theme-icon

  files:
    exclude:
      - usr/share/man[0-9]
      - usr/share/man
      - usr/share/doc/*/README.*
      - usr/share/doc/*/changelog.*
      - usr/share/doc/*/NEWS.*
      - usr/share/doc/*/TODO.*

  runtime:
    env:
      PATH: '${APPDIR}/usr/bin:${PATH}'
      # Set python home
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONHOME
      PYTHONHOME: '${APPDIR}/usr'
      # Path to the site-packages dir or other modules dirs
      # See https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH
      PYTHONPATH: '${APPDIR}/usr/lib/python3.8/site-packages'

      # Disable webengine sandboxing
      QTWEBENGINE_DISABLE_SANDBOX: 1

      # this is required for the models
      ROS_PACKAGE_PATH: '${APPDIR}/usr/share'

  test:
    fedora:
      image: appimagecrafters/tests-env:fedora-30
      command: ./AppRun
      use_host_x: true
    debian:
      image: appimagecrafters/tests-env:debian-stable
      command: ./AppRun
      use_host_x: true
    arch:
      image: appimagecrafters/tests-env:archlinux-latest
      command: ./AppRun
      use_host_x: true
    centos:
      image: appimagecrafters/tests-env:centos-7
      command: ./AppRun
      use_host_x: true
    ubuntu:
      image: appimagecrafters/tests-env:ubuntu-bionic
      command: ./AppRun
      use_host_x: true

AppImage:
  update-information: 'gh-releases-zsync|AppImageCrafters|com.robot-log-visualizer.ami|latest|python-appimage-*x86_64.AppImage.zsync'
  sign-key: None
  arch: x86_64
